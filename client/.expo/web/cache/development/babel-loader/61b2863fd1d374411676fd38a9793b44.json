{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/paigeschulz1/Desktop/MUCFinal/MeetUCan/client/node_modules/react-native-material-dropdown/src/components/dropdown/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Ripple from 'react-native-material-ripple';\nimport { TextField } from 'react-native-material-textfield';\nimport DropdownItem from \"../item\";\nimport styles from \"./styles\";\n\nvar Dropdown = function (_PureComponent) {\n  _inherits(Dropdown, _PureComponent);\n\n  var _super = _createSuper(Dropdown);\n\n  function Dropdown(props) {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _super.call(this, props);\n    _this.onPress = _this.onPress.bind(_assertThisInitialized(_this));\n    _this.onClose = _this.onClose.bind(_assertThisInitialized(_this));\n    _this.onSelect = _this.onSelect.bind(_assertThisInitialized(_this));\n    _this.onLayout = _this.onLayout.bind(_assertThisInitialized(_this));\n    _this.updateRippleRef = _this.updateRef.bind(_assertThisInitialized(_this), 'ripple');\n    _this.updateContainerRef = _this.updateRef.bind(_assertThisInitialized(_this), 'container');\n    _this.updateScrollRef = _this.updateRef.bind(_assertThisInitialized(_this), 'scroll');\n    _this.renderAccessory = _this.renderAccessory.bind(_assertThisInitialized(_this));\n    _this.renderItem = _this.renderItem.bind(_assertThisInitialized(_this));\n    _this.keyExtractor = _this.keyExtractor.bind(_assertThisInitialized(_this));\n\n    _this.blur = function () {\n      return _this.onClose();\n    };\n\n    _this.focus = _this.onPress;\n    var value = _this.props.value;\n    _this.mounted = false;\n    _this.focused = false;\n    _this.state = {\n      opacity: new Animated.Value(0),\n      selected: -1,\n      modal: false,\n      value: value\n    };\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_ref) {\n      var value = _ref.value;\n\n      if (value !== this.props.value) {\n        this.setState({\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"onPress\",\n    value: function onPress(event) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          disabled = _this$props.disabled,\n          onFocus = _this$props.onFocus,\n          itemPadding = _this$props.itemPadding,\n          rippleDuration = _this$props.rippleDuration,\n          dropdownOffset = _this$props.dropdownOffset,\n          _this$props$dropdownM = _this$props.dropdownMargins,\n          minMargin = _this$props$dropdownM.min,\n          maxMargin = _this$props$dropdownM.max,\n          animationDuration = _this$props.animationDuration,\n          absoluteRTLLayout = _this$props.absoluteRTLLayout,\n          useNativeDriver = _this$props.useNativeDriver;\n\n      if (disabled) {\n        return;\n      }\n\n      var itemCount = data.length;\n      var timestamp = Date.now();\n\n      if (null != event) {\n        event.nativeEvent.locationY -= this.rippleInsets().top;\n        event.nativeEvent.locationX -= this.rippleInsets().left;\n        this.ripple.startRipple(event);\n      }\n\n      if (!itemCount) {\n        return;\n      }\n\n      this.focused = true;\n\n      if ('function' === typeof onFocus) {\n        onFocus();\n      }\n\n      var dimensions = Dimensions.get('window');\n      this.container.measureInWindow(function (x, y, containerWidth, containerHeight) {\n        var opacity = _this2.state.opacity;\n\n        if (I18nManager.isRTL && !absoluteRTLLayout) {\n          x = dimensions.width - (x + containerWidth);\n        }\n\n        var delay = Math.max(0, rippleDuration - animationDuration - (Date.now() - timestamp));\n\n        var selected = _this2.selectedIndex();\n\n        var leftInset;\n        var left = x + dropdownOffset.left - maxMargin;\n\n        if (left > minMargin) {\n          leftInset = maxMargin;\n        } else {\n          left = minMargin;\n          leftInset = minMargin;\n        }\n\n        var right = x + containerWidth + maxMargin;\n        var rightInset;\n\n        if (dimensions.width - right > minMargin) {\n          rightInset = maxMargin;\n        } else {\n          right = dimensions.width - minMargin;\n          rightInset = minMargin;\n        }\n\n        var top = y + dropdownOffset.top - itemPadding;\n\n        _this2.setState({\n          modal: true,\n          width: right - left,\n          top: top,\n          left: left,\n          leftInset: leftInset,\n          rightInset: rightInset,\n          selected: selected\n        });\n\n        setTimeout(function () {\n          if (_this2.mounted) {\n            _this2.resetScrollOffset();\n\n            Animated.timing(opacity, {\n              duration: animationDuration,\n              toValue: 1,\n              useNativeDriver: useNativeDriver\n            }).start(function () {\n              if (_this2.mounted && 'ios' === Platform.OS) {\n                var _ref2 = _this2.scroll || {},\n                    flashScrollIndicators = _ref2.flashScrollIndicators;\n\n                if ('function' === typeof flashScrollIndicators) {\n                  flashScrollIndicators.call(_this2.scroll);\n                }\n              }\n            });\n          }\n        }, delay);\n      });\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      var _this3 = this;\n\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.value;\n      var _this$props2 = this.props,\n          onBlur = _this$props2.onBlur,\n          animationDuration = _this$props2.animationDuration,\n          useNativeDriver = _this$props2.useNativeDriver;\n      var opacity = this.state.opacity;\n      Animated.timing(opacity, {\n        duration: animationDuration,\n        toValue: 0,\n        useNativeDriver: useNativeDriver\n      }).start(function () {\n        _this3.focused = false;\n\n        if ('function' === typeof onBlur) {\n          onBlur();\n        }\n\n        if (_this3.mounted) {\n          _this3.setState({\n            value: value,\n            modal: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"onSelect\",\n    value: function onSelect(index) {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          data = _this$props3.data,\n          valueExtractor = _this$props3.valueExtractor,\n          onChangeText = _this$props3.onChangeText,\n          animationDuration = _this$props3.animationDuration,\n          rippleDuration = _this$props3.rippleDuration;\n      var value = valueExtractor(data[index], index);\n      var delay = Math.max(0, rippleDuration - animationDuration);\n\n      if ('function' === typeof onChangeText) {\n        onChangeText(value, index, data);\n      }\n\n      setTimeout(function () {\n        return _this4.onClose(value);\n      }, delay);\n    }\n  }, {\n    key: \"onLayout\",\n    value: function onLayout(event) {\n      var onLayout = this.props.onLayout;\n\n      if ('function' === typeof onLayout) {\n        onLayout(event);\n      }\n    }\n  }, {\n    key: \"value\",\n    value: function value() {\n      var value = this.state.value;\n      return value;\n    }\n  }, {\n    key: \"selectedIndex\",\n    value: function selectedIndex() {\n      var value = this.state.value;\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          valueExtractor = _this$props4.valueExtractor;\n      return data.findIndex(function (item, index) {\n        return null != item && value === valueExtractor(item, index);\n      });\n    }\n  }, {\n    key: \"selectedItem\",\n    value: function selectedItem() {\n      var data = this.props.data;\n      return data[this.selectedIndex()];\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this.focused;\n    }\n  }, {\n    key: \"itemSize\",\n    value: function itemSize() {\n      var _this$props5 = this.props,\n          fontSize = _this$props5.fontSize,\n          itemPadding = _this$props5.itemPadding;\n      return Math.ceil(fontSize * 1.5 + itemPadding * 2);\n    }\n  }, {\n    key: \"visibleItemCount\",\n    value: function visibleItemCount() {\n      var _this$props6 = this.props,\n          data = _this$props6.data,\n          itemCount = _this$props6.itemCount;\n      return Math.min(data.length, itemCount);\n    }\n  }, {\n    key: \"tailItemCount\",\n    value: function tailItemCount() {\n      return Math.max(this.visibleItemCount() - 2, 0);\n    }\n  }, {\n    key: \"rippleInsets\",\n    value: function rippleInsets() {\n      var _ref3 = this.props.rippleInsets || {},\n          _ref3$top = _ref3.top,\n          top = _ref3$top === void 0 ? 16 : _ref3$top,\n          _ref3$right = _ref3.right,\n          right = _ref3$right === void 0 ? 0 : _ref3$right,\n          _ref3$bottom = _ref3.bottom,\n          bottom = _ref3$bottom === void 0 ? -8 : _ref3$bottom,\n          _ref3$left = _ref3.left,\n          left = _ref3$left === void 0 ? 0 : _ref3$left;\n\n      return {\n        top: top,\n        right: right,\n        bottom: bottom,\n        left: left\n      };\n    }\n  }, {\n    key: \"resetScrollOffset\",\n    value: function resetScrollOffset() {\n      var selected = this.state.selected;\n      var _this$props7 = this.props,\n          data = _this$props7.data,\n          dropdownPosition = _this$props7.dropdownPosition;\n      var offset = 0;\n      var itemCount = data.length;\n      var itemSize = this.itemSize();\n      var tailItemCount = this.tailItemCount();\n      var visibleItemCount = this.visibleItemCount();\n\n      if (itemCount > visibleItemCount) {\n        if (null == dropdownPosition) {\n          switch (selected) {\n            case -1:\n              break;\n\n            case 0:\n            case 1:\n              break;\n\n            default:\n              if (selected >= itemCount - tailItemCount) {\n                offset = itemSize * (itemCount - visibleItemCount);\n              } else {\n                offset = itemSize * (selected - 1);\n              }\n\n          }\n        } else {\n          var index = selected - dropdownPosition;\n\n          if (dropdownPosition < 0) {\n            index -= visibleItemCount;\n          }\n\n          index = Math.max(0, index);\n          index = Math.min(index, itemCount - visibleItemCount);\n\n          if (~selected) {\n            offset = itemSize * index;\n          }\n        }\n      }\n\n      if (this.scroll) {\n        this.scroll.scrollToOffset({\n          offset: offset,\n          animated: false\n        });\n      }\n    }\n  }, {\n    key: \"updateRef\",\n    value: function updateRef(name, ref) {\n      this[name] = ref;\n    }\n  }, {\n    key: \"keyExtractor\",\n    value: function keyExtractor(item, index) {\n      var valueExtractor = this.props.valueExtractor;\n      return index + \"-\" + valueExtractor(item, index);\n    }\n  }, {\n    key: \"renderBase\",\n    value: function renderBase(props) {\n      var value = this.state.value;\n      var _this$props8 = this.props,\n          data = _this$props8.data,\n          renderBase = _this$props8.renderBase,\n          labelExtractor = _this$props8.labelExtractor,\n          dropdownOffset = _this$props8.dropdownOffset,\n          _this$props8$renderAc = _this$props8.renderAccessory,\n          renderAccessory = _this$props8$renderAc === void 0 ? this.renderAccessory : _this$props8$renderAc;\n      var index = this.selectedIndex();\n      var title;\n\n      if (~index) {\n        title = labelExtractor(data[index], index);\n      }\n\n      if (null == title) {\n        title = value;\n      }\n\n      if ('function' === typeof renderBase) {\n        return renderBase(_objectSpread(_objectSpread({}, props), {}, {\n          title: title,\n          value: value,\n          renderAccessory: renderAccessory\n        }));\n      }\n\n      title = null == title || 'string' === typeof title ? title : String(title);\n      return React.createElement(TextField, _extends({\n        label: \"\",\n        labelHeight: dropdownOffset.top - Platform.select({\n          ios: 1,\n          android: 2\n        })\n      }, props, {\n        value: title,\n        editable: false,\n        onChangeText: undefined,\n        renderAccessory: renderAccessory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"renderRipple\",\n    value: function renderRipple() {\n      var _this$props9 = this.props,\n          baseColor = _this$props9.baseColor,\n          _this$props9$rippleCo = _this$props9.rippleColor,\n          rippleColor = _this$props9$rippleCo === void 0 ? baseColor : _this$props9$rippleCo,\n          rippleOpacity = _this$props9.rippleOpacity,\n          rippleDuration = _this$props9.rippleDuration,\n          rippleCentered = _this$props9.rippleCentered,\n          rippleSequential = _this$props9.rippleSequential;\n\n      var _this$rippleInsets = this.rippleInsets(),\n          bottom = _this$rippleInsets.bottom,\n          insets = _objectWithoutProperties(_this$rippleInsets, [\"bottom\"]);\n\n      var style = _objectSpread(_objectSpread({}, insets), {}, {\n        height: this.itemSize() - bottom,\n        position: 'absolute'\n      });\n\n      return React.createElement(Ripple, {\n        style: style,\n        rippleColor: rippleColor,\n        rippleDuration: rippleDuration,\n        rippleOpacity: rippleOpacity,\n        rippleCentered: rippleCentered,\n        rippleSequential: rippleSequential,\n        ref: this.updateRippleRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"renderAccessory\",\n    value: function renderAccessory() {\n      var backgroundColor = this.props.baseColor;\n      var triangleStyle = {\n        backgroundColor: backgroundColor\n      };\n      return React.createElement(View, {\n        style: styles.accessory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.triangleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.triangle, triangleStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }\n      })));\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(_ref4) {\n      var item = _ref4.item,\n          index = _ref4.index;\n\n      if (null == item) {\n        return null;\n      }\n\n      var _this$state = this.state,\n          selected = _this$state.selected,\n          leftInset = _this$state.leftInset,\n          rightInset = _this$state.rightInset;\n      var _this$props10 = this.props,\n          valueExtractor = _this$props10.valueExtractor,\n          labelExtractor = _this$props10.labelExtractor,\n          propsExtractor = _this$props10.propsExtractor,\n          textColor = _this$props10.textColor,\n          itemColor = _this$props10.itemColor,\n          baseColor = _this$props10.baseColor,\n          _this$props10$selecte = _this$props10.selectedItemColor,\n          selectedItemColor = _this$props10$selecte === void 0 ? textColor : _this$props10$selecte,\n          _this$props10$disable = _this$props10.disabledItemColor,\n          disabledItemColor = _this$props10$disable === void 0 ? baseColor : _this$props10$disable,\n          fontSize = _this$props10.fontSize,\n          itemTextStyle = _this$props10.itemTextStyle,\n          rippleOpacity = _this$props10.rippleOpacity,\n          rippleDuration = _this$props10.rippleDuration,\n          shadeOpacity = _this$props10.shadeOpacity;\n      var props = propsExtractor(item, index);\n\n      var _props = props = _objectSpread(_objectSpread({\n        rippleDuration: rippleDuration,\n        rippleOpacity: rippleOpacity,\n        rippleColor: baseColor,\n        shadeColor: baseColor,\n        shadeOpacity: shadeOpacity\n      }, props), {}, {\n        onPress: this.onSelect\n      }),\n          style = _props.style,\n          disabled = _props.disabled;\n\n      var value = valueExtractor(item, index);\n      var label = labelExtractor(item, index);\n      var title = null == label ? value : label;\n      var color = disabled ? disabledItemColor : ~selected ? index === selected ? selectedItemColor : itemColor : selectedItemColor;\n      var textStyle = {\n        color: color,\n        fontSize: fontSize\n      };\n      props.style = [style, {\n        height: this.itemSize(),\n        paddingLeft: leftInset,\n        paddingRight: rightInset\n      }];\n      return React.createElement(DropdownItem, _extends({\n        index: index\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        style: [styles.item, itemTextStyle, textStyle],\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 9\n        }\n      }, title));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props11 = this.props,\n          renderBase = _this$props11.renderBase,\n          renderAccessory = _this$props11.renderAccessory,\n          containerStyle = _this$props11.containerStyle,\n          overlayStyleOverrides = _this$props11.overlayStyle,\n          pickerStyleOverrides = _this$props11.pickerStyle,\n          rippleInsets = _this$props11.rippleInsets,\n          rippleOpacity = _this$props11.rippleOpacity,\n          rippleCentered = _this$props11.rippleCentered,\n          rippleSequential = _this$props11.rippleSequential,\n          hitSlop = _this$props11.hitSlop,\n          pressRetentionOffset = _this$props11.pressRetentionOffset,\n          testID = _this$props11.testID,\n          nativeID = _this$props11.nativeID,\n          accessible = _this$props11.accessible,\n          accessibilityLabel = _this$props11.accessibilityLabel,\n          supportedOrientations = _this$props11.supportedOrientations,\n          props = _objectWithoutProperties(_this$props11, [\"renderBase\", \"renderAccessory\", \"containerStyle\", \"overlayStyle\", \"pickerStyle\", \"rippleInsets\", \"rippleOpacity\", \"rippleCentered\", \"rippleSequential\", \"hitSlop\", \"pressRetentionOffset\", \"testID\", \"nativeID\", \"accessible\", \"accessibilityLabel\", \"supportedOrientations\"]);\n\n      var data = props.data,\n          disabled = props.disabled,\n          itemPadding = props.itemPadding,\n          dropdownPosition = props.dropdownPosition;\n      var _this$state2 = this.state,\n          left = _this$state2.left,\n          top = _this$state2.top,\n          width = _this$state2.width,\n          opacity = _this$state2.opacity,\n          selected = _this$state2.selected,\n          modal = _this$state2.modal;\n      var itemCount = data.length;\n      var visibleItemCount = this.visibleItemCount();\n      var tailItemCount = this.tailItemCount();\n      var itemSize = this.itemSize();\n      var height = 2 * itemPadding + itemSize * visibleItemCount;\n      var translateY = -itemPadding;\n\n      if (null == dropdownPosition) {\n        switch (selected) {\n          case -1:\n            translateY -= 1 === itemCount ? 0 : itemSize;\n            break;\n\n          case 0:\n            break;\n\n          default:\n            if (selected >= itemCount - tailItemCount) {\n              translateY -= itemSize * (visibleItemCount - (itemCount - selected));\n            } else {\n              translateY -= itemSize;\n            }\n\n        }\n      } else {\n        if (dropdownPosition < 0) {\n          translateY -= itemSize * (visibleItemCount + dropdownPosition);\n        } else {\n          translateY -= itemSize * dropdownPosition;\n        }\n      }\n\n      var overlayStyle = {\n        opacity: opacity\n      };\n      var pickerStyle = {\n        width: width,\n        height: height,\n        top: top,\n        left: left,\n        transform: [{\n          translateY: translateY\n        }]\n      };\n      var touchableProps = {\n        disabled: disabled,\n        hitSlop: hitSlop,\n        pressRetentionOffset: pressRetentionOffset,\n        onPress: this.onPress,\n        testID: testID,\n        nativeID: nativeID,\n        accessible: accessible,\n        accessibilityLabel: accessibilityLabel\n      };\n      return React.createElement(View, {\n        onLayout: this.onLayout,\n        ref: this.updateContainerRef,\n        style: containerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, _extends({}, touchableProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        pointerEvents: \"box-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }\n      }, this.renderBase(props), this.renderRipple())), React.createElement(Modal, {\n        visible: modal,\n        transparent: true,\n        onRequestClose: this.blur,\n        supportedOrientations: supportedOrientations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.overlay, overlayStyle, overlayStyleOverrides],\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          return true;\n        },\n        onResponderRelease: this.blur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: [styles.picker, pickerStyle, pickerStyleOverrides],\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          return true;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 13\n        }\n      }, React.createElement(FlatList, {\n        ref: this.updateScrollRef,\n        data: data,\n        style: styles.scroll,\n        renderItem: this.renderItem,\n        keyExtractor: this.keyExtractor,\n        scrollEnabled: visibleItemCount < itemCount,\n        contentContainerStyle: styles.scrollContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return Dropdown;\n}(PureComponent);\n\nDropdown.defaultProps = {\n  hitSlop: {\n    top: 6,\n    right: 4,\n    bottom: 6,\n    left: 4\n  },\n  disabled: false,\n  data: [],\n  valueExtractor: function valueExtractor() {\n    var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        value = _ref5.value;\n\n    var index = arguments.length > 1 ? arguments[1] : undefined;\n    return value;\n  },\n  labelExtractor: function labelExtractor() {\n    var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        label = _ref6.label;\n\n    var index = arguments.length > 1 ? arguments[1] : undefined;\n    return label;\n  },\n  propsExtractor: function propsExtractor() {\n    return null;\n  },\n  absoluteRTLLayout: false,\n  dropdownOffset: {\n    top: 32,\n    left: 0\n  },\n  dropdownMargins: {\n    min: 8,\n    max: 16\n  },\n  rippleCentered: false,\n  rippleSequential: true,\n  rippleInsets: {\n    top: 16,\n    right: 0,\n    bottom: -8,\n    left: 0\n  },\n  rippleOpacity: 0.54,\n  shadeOpacity: 0.12,\n  rippleDuration: 400,\n  animationDuration: 225,\n  fontSize: 16,\n  textColor: 'rgba(0, 0, 0, .87)',\n  itemColor: 'rgba(0, 0, 0, .54)',\n  baseColor: 'rgba(0, 0, 0, .38)',\n  itemCount: 4,\n  itemPadding: 8,\n  supportedOrientations: ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'],\n  useNativeDriver: false\n};\nDropdown.propTypes = _objectSpread(_objectSpread({}, TouchableWithoutFeedback.propTypes), {}, {\n  disabled: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  data: PropTypes.arrayOf(PropTypes.object),\n  valueExtractor: PropTypes.func,\n  labelExtractor: PropTypes.func,\n  propsExtractor: PropTypes.func,\n  absoluteRTLLayout: PropTypes.bool,\n  dropdownOffset: PropTypes.shape({\n    top: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired\n  }),\n  dropdownMargins: PropTypes.shape({\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired\n  }),\n  dropdownPosition: PropTypes.number,\n  rippleColor: PropTypes.string,\n  rippleCentered: PropTypes.bool,\n  rippleSequential: PropTypes.bool,\n  rippleInsets: PropTypes.shape({\n    top: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n    left: PropTypes.number\n  }),\n  rippleOpacity: PropTypes.number,\n  shadeOpacity: PropTypes.number,\n  rippleDuration: PropTypes.number,\n  animationDuration: PropTypes.number,\n  fontSize: PropTypes.number,\n  textColor: PropTypes.string,\n  itemColor: PropTypes.string,\n  selectedItemColor: PropTypes.string,\n  disabledItemColor: PropTypes.string,\n  baseColor: PropTypes.string,\n  itemTextStyle: Text.propTypes.style,\n  itemCount: PropTypes.number,\n  itemPadding: PropTypes.number,\n  onLayout: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func,\n  renderBase: PropTypes.func,\n  renderAccessory: PropTypes.func,\n  containerStyle: (ViewPropTypes || View.propTypes).style,\n  overlayStyle: (ViewPropTypes || View.propTypes).style,\n  pickerStyle: (ViewPropTypes || View.propTypes).style,\n  supportedOrientations: PropTypes.arrayOf(PropTypes.string),\n  useNativeDriver: PropTypes.bool\n});\nexport { Dropdown as default };","map":{"version":3,"sources":["/Users/paigeschulz1/Desktop/MUCFinal/MeetUCan/client/node_modules/react-native-material-dropdown/src/components/dropdown/index.js"],"names":["PropTypes","React","PureComponent","ViewPropTypes","Ripple","TextField","DropdownItem","styles","Dropdown","props","onPress","bind","onClose","onSelect","onLayout","updateRippleRef","updateRef","updateContainerRef","updateScrollRef","renderAccessory","renderItem","keyExtractor","blur","focus","value","mounted","focused","state","opacity","Animated","Value","selected","modal","setState","event","data","disabled","onFocus","itemPadding","rippleDuration","dropdownOffset","dropdownMargins","minMargin","min","maxMargin","max","animationDuration","absoluteRTLLayout","useNativeDriver","itemCount","length","timestamp","Date","now","nativeEvent","locationY","rippleInsets","top","locationX","left","ripple","startRipple","dimensions","Dimensions","get","container","measureInWindow","x","y","containerWidth","containerHeight","I18nManager","isRTL","width","delay","Math","selectedIndex","leftInset","right","rightInset","setTimeout","resetScrollOffset","timing","duration","toValue","start","Platform","OS","scroll","flashScrollIndicators","call","onBlur","index","valueExtractor","onChangeText","findIndex","item","fontSize","ceil","visibleItemCount","bottom","dropdownPosition","offset","itemSize","tailItemCount","scrollToOffset","animated","name","ref","renderBase","labelExtractor","title","String","select","ios","android","undefined","baseColor","rippleColor","rippleOpacity","rippleCentered","rippleSequential","insets","style","height","position","backgroundColor","triangleStyle","accessory","triangleContainer","triangle","propsExtractor","textColor","itemColor","selectedItemColor","disabledItemColor","itemTextStyle","shadeOpacity","shadeColor","label","color","textStyle","paddingLeft","paddingRight","containerStyle","overlayStyleOverrides","overlayStyle","pickerStyleOverrides","pickerStyle","hitSlop","pressRetentionOffset","testID","nativeID","accessible","accessibilityLabel","supportedOrientations","translateY","transform","touchableProps","renderRipple","overlay","picker","scrollContainer","defaultProps","propTypes","TouchableWithoutFeedback","bool","oneOfType","string","number","arrayOf","object","func","shape","isRequired","Text","View"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport {\n  Text,\n  View,\n  FlatList,\n  Animated,\n  Modal,\n  TouchableWithoutFeedback,\n  Dimensions,\n  Platform,\n  ViewPropTypes,\n  I18nManager,\n} from 'react-native';\nimport Ripple from 'react-native-material-ripple';\nimport { TextField } from 'react-native-material-textfield';\n\nimport DropdownItem from '../item';\nimport styles from './styles';\n\nexport default class Dropdown extends PureComponent {\n  static defaultProps = {\n    hitSlop: { top: 6, right: 4, bottom: 6, left: 4 },\n\n    disabled: false,\n\n    data: [],\n\n    valueExtractor: ({ value } = {}, index) => value,\n    labelExtractor: ({ label } = {}, index) => label,\n    propsExtractor: () => null,\n\n    absoluteRTLLayout: false,\n\n    dropdownOffset: {\n      top: 32,\n      left: 0,\n    },\n\n    dropdownMargins: {\n      min: 8,\n      max: 16,\n    },\n\n    rippleCentered: false,\n    rippleSequential: true,\n\n    rippleInsets: {\n      top: 16,\n      right: 0,\n      bottom: -8,\n      left: 0,\n    },\n\n    rippleOpacity: 0.54,\n    shadeOpacity: 0.12,\n\n    rippleDuration: 400,\n    animationDuration: 225,\n\n    fontSize: 16,\n\n    textColor: 'rgba(0, 0, 0, .87)',\n    itemColor: 'rgba(0, 0, 0, .54)',\n    baseColor: 'rgba(0, 0, 0, .38)',\n\n    itemCount: 4,\n    itemPadding: 8,\n\n    supportedOrientations: [\n      'portrait',\n      'portrait-upside-down',\n      'landscape',\n      'landscape-left',\n      'landscape-right',\n    ],\n\n    useNativeDriver: false,\n  };\n\n  static propTypes = {\n    ...TouchableWithoutFeedback.propTypes,\n\n    disabled: PropTypes.bool,\n\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n\n    data: PropTypes.arrayOf(PropTypes.object),\n\n    valueExtractor: PropTypes.func,\n    labelExtractor: PropTypes.func,\n    propsExtractor: PropTypes.func,\n\n    absoluteRTLLayout: PropTypes.bool,\n\n    dropdownOffset: PropTypes.shape({\n      top: PropTypes.number.isRequired,\n      left: PropTypes.number.isRequired,\n    }),\n\n    dropdownMargins: PropTypes.shape({\n      min: PropTypes.number.isRequired,\n      max: PropTypes.number.isRequired,\n    }),\n\n    dropdownPosition: PropTypes.number,\n\n    rippleColor: PropTypes.string,\n    rippleCentered: PropTypes.bool,\n    rippleSequential: PropTypes.bool,\n\n    rippleInsets: PropTypes.shape({\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      left: PropTypes.number,\n    }),\n\n    rippleOpacity: PropTypes.number,\n    shadeOpacity: PropTypes.number,\n\n    rippleDuration: PropTypes.number,\n    animationDuration: PropTypes.number,\n\n    fontSize: PropTypes.number,\n\n    textColor: PropTypes.string,\n    itemColor: PropTypes.string,\n    selectedItemColor: PropTypes.string,\n    disabledItemColor: PropTypes.string,\n    baseColor: PropTypes.string,\n\n    itemTextStyle: Text.propTypes.style,\n\n    itemCount: PropTypes.number,\n    itemPadding: PropTypes.number,\n\n    onLayout: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    onChangeText: PropTypes.func,\n\n    renderBase: PropTypes.func,\n    renderAccessory: PropTypes.func,\n\n    containerStyle: (ViewPropTypes || View.propTypes).style,\n    overlayStyle: (ViewPropTypes || View.propTypes).style,\n    pickerStyle: (ViewPropTypes || View.propTypes).style,\n\n    supportedOrientations: PropTypes.arrayOf(PropTypes.string),\n\n    useNativeDriver: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onPress = this.onPress.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onLayout = this.onLayout.bind(this);\n\n    this.updateRippleRef = this.updateRef.bind(this, 'ripple');\n    this.updateContainerRef = this.updateRef.bind(this, 'container');\n    this.updateScrollRef = this.updateRef.bind(this, 'scroll');\n\n    this.renderAccessory = this.renderAccessory.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n\n    this.keyExtractor = this.keyExtractor.bind(this);\n\n    this.blur = () => this.onClose();\n    this.focus = this.onPress;\n\n    let { value } = this.props;\n\n    this.mounted = false;\n    this.focused = false;\n\n    this.state = {\n      opacity: new Animated.Value(0),\n      selected: -1,\n      modal: false,\n      value,\n    };\n  }\n\n  componentWillReceiveProps({ value }) {\n    if (value !== this.props.value) {\n      this.setState({ value });\n    }\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  onPress(event) {\n    let {\n      data,\n      disabled,\n      onFocus,\n      itemPadding,\n      rippleDuration,\n      dropdownOffset,\n      dropdownMargins: { min: minMargin, max: maxMargin },\n      animationDuration,\n      absoluteRTLLayout,\n      useNativeDriver,\n    } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    let itemCount = data.length;\n    let timestamp = Date.now();\n\n    if (null != event) {\n      /* Adjust event location */\n      event.nativeEvent.locationY -= this.rippleInsets().top;\n      event.nativeEvent.locationX -= this.rippleInsets().left;\n\n      /* Start ripple directly from event */\n      this.ripple.startRipple(event);\n    }\n\n    if (!itemCount) {\n      return;\n    }\n\n    this.focused = true;\n\n    if ('function' === typeof onFocus) {\n      onFocus();\n    }\n\n    let dimensions = Dimensions.get('window');\n\n    this.container.measureInWindow((x, y, containerWidth, containerHeight) => {\n      let { opacity } = this.state;\n\n      /* Adjust coordinates for relative layout in RTL locale */\n      if (I18nManager.isRTL && !absoluteRTLLayout) {\n        x = dimensions.width - (x + containerWidth);\n      }\n\n      let delay = Math.max(0, rippleDuration - animationDuration - (Date.now() - timestamp));\n      let selected = this.selectedIndex();\n\n      let leftInset;\n      let left = x\n        + dropdownOffset.left\n        - maxMargin;\n\n      if (left > minMargin) {\n        leftInset = maxMargin;\n      } else {\n        left = minMargin;\n        leftInset = minMargin;\n      }\n\n      let right = x + containerWidth + maxMargin;\n      let rightInset;\n\n      if (dimensions.width - right > minMargin) {\n        rightInset = maxMargin;\n      } else {\n        right = dimensions.width - minMargin;\n        rightInset = minMargin;\n      }\n\n      let top = y\n        + dropdownOffset.top\n        - itemPadding;\n\n      this.setState({\n        modal: true,\n        width: right - left,\n        top,\n        left,\n        leftInset,\n        rightInset,\n        selected,\n      });\n\n      setTimeout((() => {\n        if (this.mounted) {\n          this.resetScrollOffset();\n\n          Animated\n            .timing(opacity, {\n              duration: animationDuration,\n              toValue: 1,\n              useNativeDriver,\n            })\n            .start(() => {\n              if (this.mounted && 'ios' === Platform.OS) {\n                let { flashScrollIndicators } = this.scroll || {};\n\n                if ('function' === typeof flashScrollIndicators) {\n                  flashScrollIndicators.call(this.scroll);\n                }\n              }\n            });\n        }\n      }), delay);\n    });\n  }\n\n  onClose(value = this.state.value) {\n    let { onBlur, animationDuration, useNativeDriver } = this.props;\n    let { opacity } = this.state;\n\n    Animated\n      .timing(opacity, {\n        duration: animationDuration,\n        toValue: 0,\n        useNativeDriver,\n      })\n      .start(() => {\n        this.focused = false;\n\n        if ('function' === typeof onBlur) {\n          onBlur();\n        }\n\n        if (this.mounted) {\n          this.setState({ value, modal: false });\n        }\n      });\n  }\n\n  onSelect(index) {\n    let {\n      data,\n      valueExtractor,\n      onChangeText,\n      animationDuration,\n      rippleDuration,\n    } = this.props;\n\n    let value = valueExtractor(data[index], index);\n    let delay = Math.max(0, rippleDuration - animationDuration);\n\n    if ('function' === typeof onChangeText) {\n      onChangeText(value, index, data);\n    }\n\n    setTimeout(() => this.onClose(value), delay);\n  }\n\n  onLayout(event) {\n    let { onLayout } = this.props;\n\n    if ('function' === typeof onLayout) {\n      onLayout(event);\n    }\n  }\n\n  value() {\n    let { value } = this.state;\n\n    return value;\n  }\n\n  selectedIndex() {\n    let { value } = this.state;\n    let { data, valueExtractor } = this.props;\n\n    return data\n      .findIndex((item, index) => null != item && value === valueExtractor(item, index));\n  }\n\n  selectedItem() {\n    let { data } = this.props;\n\n    return data[this.selectedIndex()];\n  }\n\n  isFocused() {\n    return this.focused;\n  }\n\n  itemSize() {\n    let { fontSize, itemPadding } = this.props;\n\n    return Math.ceil(fontSize * 1.5 + itemPadding * 2);\n  }\n\n  visibleItemCount() {\n    let { data, itemCount } = this.props;\n\n    return Math.min(data.length, itemCount);\n  }\n\n  tailItemCount() {\n    return Math.max(this.visibleItemCount() - 2, 0);\n  }\n\n  rippleInsets() {\n    let {\n      top = 16,\n      right = 0,\n      bottom = -8,\n      left = 0,\n    } = this.props.rippleInsets || {};\n\n    return { top, right, bottom, left };\n  }\n\n  resetScrollOffset() {\n    let { selected } = this.state;\n    let { data, dropdownPosition } = this.props;\n\n    let offset = 0;\n    let itemCount = data.length;\n    let itemSize = this.itemSize();\n    let tailItemCount = this.tailItemCount();\n    let visibleItemCount = this.visibleItemCount();\n\n    if (itemCount > visibleItemCount) {\n      if (null == dropdownPosition) {\n        switch (selected) {\n          case -1:\n            break;\n\n          case 0:\n          case 1:\n            break;\n\n          default:\n            if (selected >= itemCount - tailItemCount) {\n              offset = itemSize * (itemCount - visibleItemCount);\n            } else {\n              offset = itemSize * (selected - 1);\n            }\n        }\n      } else {\n        let index = selected - dropdownPosition;\n\n        if (dropdownPosition < 0) {\n          index -= visibleItemCount;\n        }\n\n        index = Math.max(0, index);\n        index = Math.min(index, itemCount - visibleItemCount);\n\n        if (~selected) {\n          offset = itemSize * index;\n        }\n      }\n    }\n\n    if (this.scroll) {\n      this.scroll.scrollToOffset({ offset, animated: false });\n    }\n  }\n\n  updateRef(name, ref) {\n    this[name] = ref;\n  }\n\n  keyExtractor(item, index) {\n    let { valueExtractor } = this.props;\n\n    return `${index}-${valueExtractor(item, index)}`;\n  }\n\n  renderBase(props) {\n    let { value } = this.state;\n    let {\n      data,\n      renderBase,\n      labelExtractor,\n      dropdownOffset,\n      renderAccessory = this.renderAccessory,\n    } = this.props;\n\n    let index = this.selectedIndex();\n    let title;\n\n    if (~index) {\n      title = labelExtractor(data[index], index);\n    }\n\n    if (null == title) {\n      title = value;\n    }\n\n    if ('function' === typeof renderBase) {\n      return renderBase({ ...props, title, value, renderAccessory });\n    }\n\n    title = null == title || 'string' === typeof title?\n      title:\n      String(title);\n\n    return (\n      <TextField\n        label=''\n        labelHeight={dropdownOffset.top - Platform.select({ ios: 1, android: 2 })}\n\n        {...props}\n\n        value={title}\n        editable={false}\n        onChangeText={undefined}\n        renderAccessory={renderAccessory}\n      />\n    );\n  }\n\n  renderRipple() {\n    let {\n      baseColor,\n      rippleColor = baseColor,\n      rippleOpacity,\n      rippleDuration,\n      rippleCentered,\n      rippleSequential,\n    } = this.props;\n\n    let { bottom, ...insets } = this.rippleInsets();\n    let style = {\n      ...insets,\n\n      height: this.itemSize() - bottom,\n      position: 'absolute',\n    };\n\n    return (\n      <Ripple\n        style={style}\n        rippleColor={rippleColor}\n        rippleDuration={rippleDuration}\n        rippleOpacity={rippleOpacity}\n        rippleCentered={rippleCentered}\n        rippleSequential={rippleSequential}\n        ref={this.updateRippleRef}\n      />\n    );\n  }\n\n  renderAccessory() {\n    let { baseColor: backgroundColor } = this.props;\n    let triangleStyle = { backgroundColor };\n\n    return (\n      <View style={styles.accessory}>\n        <View style={styles.triangleContainer}>\n          <View style={[styles.triangle, triangleStyle]} />\n        </View>\n      </View>\n    );\n  }\n\n  renderItem({ item, index }) {\n    if (null == item) {\n      return null;\n    }\n\n    let { selected, leftInset, rightInset } = this.state;\n\n    let {\n      valueExtractor,\n      labelExtractor,\n      propsExtractor,\n      textColor,\n      itemColor,\n      baseColor,\n      selectedItemColor = textColor,\n      disabledItemColor = baseColor,\n      fontSize,\n      itemTextStyle,\n      rippleOpacity,\n      rippleDuration,\n      shadeOpacity,\n    } = this.props;\n\n    let props = propsExtractor(item, index);\n\n    let { style, disabled }\n      = props\n      = {\n        rippleDuration,\n        rippleOpacity,\n        rippleColor: baseColor,\n\n        shadeColor: baseColor,\n        shadeOpacity,\n\n        ...props,\n\n        onPress: this.onSelect,\n      };\n\n    let value = valueExtractor(item, index);\n    let label = labelExtractor(item, index);\n\n    let title = null == label?\n      value:\n      label;\n\n    let color = disabled?\n      disabledItemColor:\n      ~selected?\n        index === selected?\n          selectedItemColor:\n          itemColor:\n        selectedItemColor;\n\n    let textStyle = { color, fontSize };\n\n    props.style = [\n      style,\n      {\n        height: this.itemSize(),\n        paddingLeft: leftInset,\n        paddingRight: rightInset,\n      },\n    ];\n\n    return (\n      <DropdownItem index={index} {...props}>\n        <Text style={[styles.item, itemTextStyle, textStyle]} numberOfLines={1}>\n          {title}\n        </Text>\n      </DropdownItem>\n    );\n  }\n\n  render() {\n    let {\n      renderBase,\n      renderAccessory,\n      containerStyle,\n      overlayStyle: overlayStyleOverrides,\n      pickerStyle: pickerStyleOverrides,\n\n      rippleInsets,\n      rippleOpacity,\n      rippleCentered,\n      rippleSequential,\n\n      hitSlop,\n      pressRetentionOffset,\n      testID,\n      nativeID,\n      accessible,\n      accessibilityLabel,\n\n      supportedOrientations,\n\n      ...props\n    } = this.props;\n\n    let {\n      data,\n      disabled,\n      itemPadding,\n      dropdownPosition,\n    } = props;\n\n    let { left, top, width, opacity, selected, modal } = this.state;\n\n    let itemCount = data.length;\n    let visibleItemCount = this.visibleItemCount();\n    let tailItemCount = this.tailItemCount();\n    let itemSize = this.itemSize();\n\n    let height = 2 * itemPadding + itemSize * visibleItemCount;\n    let translateY = -itemPadding;\n\n    if (null == dropdownPosition) {\n      switch (selected) {\n        case -1:\n          translateY -= 1 === itemCount? 0 : itemSize;\n          break;\n\n        case 0:\n          break;\n\n        default:\n          if (selected >= itemCount - tailItemCount) {\n            translateY -= itemSize * (visibleItemCount - (itemCount - selected));\n          } else {\n            translateY -= itemSize;\n          }\n      }\n    } else {\n      if (dropdownPosition < 0) {\n        translateY -= itemSize * (visibleItemCount + dropdownPosition);\n      } else {\n        translateY -= itemSize * dropdownPosition;\n      }\n    }\n\n    let overlayStyle = { opacity };\n\n    let pickerStyle = {\n      width,\n      height,\n      top,\n      left,\n      transform: [{ translateY }],\n    };\n\n    let touchableProps = {\n      disabled,\n      hitSlop,\n      pressRetentionOffset,\n      onPress: this.onPress,\n      testID,\n      nativeID,\n      accessible,\n      accessibilityLabel,\n    };\n\n    return (\n      <View onLayout={this.onLayout} ref={this.updateContainerRef} style={containerStyle}>\n        <TouchableWithoutFeedback {...touchableProps}>\n          <View pointerEvents='box-only'>\n            {this.renderBase(props)}\n            {this.renderRipple()}\n          </View>\n        </TouchableWithoutFeedback>\n\n        <Modal\n          visible={modal}\n          transparent={true}\n          onRequestClose={this.blur}\n          supportedOrientations={supportedOrientations}\n        >\n          <Animated.View\n            style={[styles.overlay, overlayStyle, overlayStyleOverrides]}\n            onStartShouldSetResponder={() => true}\n            onResponderRelease={this.blur}\n          >\n            <View\n              style={[styles.picker, pickerStyle, pickerStyleOverrides]}\n              onStartShouldSetResponder={() => true}\n            >\n              <FlatList\n                ref={this.updateScrollRef}\n                data={data}\n                style={styles.scroll}\n                renderItem={this.renderItem}\n                keyExtractor={this.keyExtractor}\n                scrollEnabled={visibleItemCount < itemCount}\n                contentContainerStyle={styles.scrollContainer}\n              />\n            </View>\n          </Animated.View>\n        </Modal>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}