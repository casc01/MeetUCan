{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/paigeschulz1/Desktop/MUCFinal/MeetUCan/client/node_modules/react-native-material-buttons/src/components/button/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Ripple from 'react-native-material-ripple';\nimport { styles } from \"./styles\";\n\nvar Button = function (_PureComponent) {\n  _inherits(Button, _PureComponent);\n\n  var _super = _createSuper(Button);\n\n  function Button(props) {\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    _this = _super.call(this, props);\n    _this.onPress = _this.onPress.bind(_assertThisInitialized(_this));\n    _this.onPressIn = _this.onPressIn.bind(_assertThisInitialized(_this));\n    _this.onPressOut = _this.onPressOut.bind(_assertThisInitialized(_this));\n    _this.state = {\n      focusAnimation: _this.props.focusAnimation || new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"onPress\",\n    value: function onPress() {\n      var onPress = this.props.onPress;\n\n      if ('function' === typeof onPress) {\n        onPress();\n      }\n    }\n  }, {\n    key: \"onPressIn\",\n    value: function onPressIn() {\n      var focusAnimation = this.state.focusAnimation;\n      var focusAnimationDuration = this.props.focusAnimationDuration;\n      Animated.timing(focusAnimation, {\n        toValue: 1,\n        duration: focusAnimationDuration,\n        easing: Easing.out(Easing.ease)\n      }).start();\n    }\n  }, {\n    key: \"onPressOut\",\n    value: function onPressOut() {\n      var focusAnimation = this.state.focusAnimation;\n      var focusAnimationDuration = this.props.focusAnimationDuration;\n      Animated.timing(focusAnimation, {\n        toValue: 0,\n        duration: focusAnimationDuration,\n        easing: Easing.out(Easing.ease)\n      }).start();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var focusAnimation = props.focusAnimation;\n\n      if (focusAnimation && focusAnimation !== this.state.focusAnimation) {\n        this.setState({\n          focusAnimation: focusAnimation\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          disabledColor = _this$props.disabledColor,\n          shadeColor = _this$props.shadeColor,\n          shadeOpacity = _this$props.shadeOpacity,\n          shadeBorderRadius = _this$props.shadeBorderRadius,\n          style = _this$props.style,\n          children = _this$props.children,\n          props = _objectWithoutProperties(_this$props, [\"color\", \"disabledColor\", \"shadeColor\", \"shadeOpacity\", \"shadeBorderRadius\", \"style\", \"children\"]);\n\n      var focusAnimation = this.state.focusAnimation;\n      var opacity = focusAnimation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, shadeOpacity]\n      });\n      var rippleStyle = {\n        backgroundColor: props.disabled ? disabledColor : color\n      };\n      var shadeStyle = {\n        backgroundColor: shadeColor,\n        borderRadius: shadeBorderRadius,\n        opacity: opacity\n      };\n      return React.createElement(Ripple, _extends({}, props, {\n        style: [styles.container, rippleStyle, style],\n        onPress: this.onPress,\n        onPressIn: this.onPressIn,\n        onPressOut: this.onPressOut,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }), children, React.createElement(Animated.View, {\n        style: [styles.shade, shadeStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Button;\n}(PureComponent);\n\nButton.defaultProps = {\n  rippleContainerBorderRadius: 2,\n  rippleSequential: true,\n  hitSlop: {\n    top: 6,\n    right: 4,\n    bottom: 6,\n    left: 4\n  },\n  color: 'rgb(224, 224, 224)',\n  shadeColor: 'rgb(0, 0, 0)',\n  shadeOpacity: 0.12,\n  shadeBorderRadius: 2,\n  focusAnimation: null,\n  focusAnimationDuration: 225,\n  disabledColor: 'rgba(0, 0, 0, .12)',\n  disabled: false\n};\nButton.propTypes = _objectSpread(_objectSpread({}, Ripple.propTypes), {}, {\n  color: PropTypes.string,\n  shadeColor: PropTypes.string,\n  shadeOpacity: PropTypes.number,\n  shadeBorderRadius: PropTypes.number,\n  focusAnimation: PropTypes.instanceOf(Animated.Value),\n  focusAnimationDuration: PropTypes.number,\n  disabledColor: PropTypes.string\n});\nexport { Button as default };","map":{"version":3,"sources":["/Users/paigeschulz1/Desktop/MUCFinal/MeetUCan/client/node_modules/react-native-material-buttons/src/components/button/index.js"],"names":["PropTypes","React","PureComponent","Ripple","styles","Button","props","onPress","bind","onPressIn","onPressOut","state","focusAnimation","Animated","Value","focusAnimationDuration","timing","toValue","duration","easing","Easing","out","ease","start","setState","color","disabledColor","shadeColor","shadeOpacity","shadeBorderRadius","style","children","opacity","interpolate","inputRange","outputRange","rippleStyle","backgroundColor","disabled","shadeStyle","borderRadius","container","shade","defaultProps","rippleContainerBorderRadius","rippleSequential","hitSlop","top","right","bottom","left","propTypes","string","number","instanceOf"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated, Easing } from 'react-native';\nimport Ripple from 'react-native-material-ripple';\n\nimport { styles } from './styles';\n\nexport default class Button extends PureComponent {\n  static defaultProps = {\n    rippleContainerBorderRadius: 2,\n    rippleSequential: true,\n\n    hitSlop: { top: 6, right: 4, bottom: 6, left: 4 },\n\n    color: 'rgb(224, 224, 224)',\n\n    shadeColor: 'rgb(0, 0, 0)',\n    shadeOpacity: 0.12,\n    shadeBorderRadius: 2,\n\n    focusAnimation: null,\n    focusAnimationDuration: 225,\n\n    disabledColor: 'rgba(0, 0, 0, .12)',\n    disabled: false,\n  };\n\n  static propTypes = {\n    ...Ripple.propTypes,\n\n    color: PropTypes.string,\n\n    shadeColor: PropTypes.string,\n    shadeOpacity: PropTypes.number,\n    shadeBorderRadius: PropTypes.number,\n\n    focusAnimation: PropTypes.instanceOf(Animated.Value),\n    focusAnimationDuration: PropTypes.number,\n\n    disabledColor: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onPress = this.onPress.bind(this);\n    this.onPressIn = this.onPressIn.bind(this);\n    this.onPressOut = this.onPressOut.bind(this);\n\n    this.state = {\n      focusAnimation: this.props.focusAnimation || new Animated.Value(0),\n    };\n  }\n\n  onPress() {\n    let { onPress } = this.props;\n\n    if ('function' === typeof onPress) {\n      onPress();\n    }\n  }\n\n  onPressIn() {\n    let { focusAnimation } = this.state;\n    let { focusAnimationDuration } = this.props;\n\n    Animated\n      .timing(focusAnimation, {\n        toValue: 1,\n        duration: focusAnimationDuration,\n        easing: Easing.out(Easing.ease),\n      })\n      .start();\n  }\n\n  onPressOut() {\n    let { focusAnimation } = this.state;\n    let { focusAnimationDuration } = this.props;\n\n    Animated\n      .timing(focusAnimation, {\n        toValue: 0,\n        duration: focusAnimationDuration,\n        easing: Easing.out(Easing.ease),\n      })\n      .start();\n  }\n\n  componentWillReceiveProps(props) {\n    let { focusAnimation } = props;\n\n    if (focusAnimation && focusAnimation !== this.state.focusAnimation) {\n      this.setState({ focusAnimation });\n    }\n  }\n\n  render() {\n    let { color, disabledColor, shadeColor, shadeOpacity, shadeBorderRadius, style, children, ...props } = this.props;\n    let { focusAnimation } = this.state;\n\n    let opacity = focusAnimation.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, shadeOpacity],\n    });\n\n    let rippleStyle = {\n      backgroundColor: props.disabled? disabledColor : color,\n    };\n\n    let shadeStyle = {\n      backgroundColor: shadeColor,\n      borderRadius: shadeBorderRadius,\n      opacity,\n    };\n\n    return (\n      <Ripple\n        {...props}\n\n        style={[styles.container, rippleStyle, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n      >\n        {children}\n        <Animated.View style={[ styles.shade, shadeStyle ]} />\n      </Ripple>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}