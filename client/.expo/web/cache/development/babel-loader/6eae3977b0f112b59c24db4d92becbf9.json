{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/paigeschulz1/Desktop/MUCFinal/MeetUCan/client/node_modules/react-native-material-textfield/src/components/affix/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport styles from \"./styles\";\n\nvar Affix = function (_PureComponent) {\n  _inherits(Affix, _PureComponent);\n\n  var _super = _createSuper(Affix);\n\n  function Affix(props) {\n    var _this;\n\n    _classCallCheck(this, Affix);\n\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n        active = _this$props.active,\n        focused = _this$props.focused;\n    _this.state = {\n      opacity: new Animated.Value(active || focused ? 1 : 0)\n    };\n    return _this;\n  }\n\n  _createClass(Affix, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var opacity = this.state.opacity;\n      var _this$props2 = this.props,\n          active = _this$props2.active,\n          focused = _this$props2.focused,\n          animationDuration = _this$props2.animationDuration;\n\n      if (focused ^ props.focused || active ^ props.active) {\n        Animated.timing(opacity, {\n          toValue: props.active || props.focused ? 1 : 0,\n          duration: animationDuration\n        }).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var opacity = this.state.opacity;\n      var _this$props3 = this.props,\n          style = _this$props3.style,\n          children = _this$props3.children,\n          type = _this$props3.type,\n          fontSize = _this$props3.fontSize,\n          color = _this$props3.baseColor;\n      var containerStyle = {\n        height: fontSize * 1.5,\n        opacity: opacity\n      };\n      var textStyle = {\n        color: color,\n        fontSize: fontSize\n      };\n\n      switch (type) {\n        case 'prefix':\n          containerStyle.paddingRight = 8;\n          textStyle.textAlign = 'left';\n          break;\n\n        case 'suffix':\n          containerStyle.paddingLeft = 8;\n          textStyle.textAlign = 'right';\n          break;\n      }\n\n      return React.createElement(Animated.View, {\n        style: [styles.container, containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.Text, {\n        style: [style, textStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, children));\n    }\n  }]);\n\n  return Affix;\n}(PureComponent);\n\nAffix.defaultProps = {\n  numberOfLines: 1,\n  active: false,\n  focused: false\n};\nAffix.propTypes = {\n  numberOfLines: PropTypes.number,\n  active: PropTypes.bool,\n  focused: PropTypes.bool,\n  type: PropTypes.oneOf(['prefix', 'suffix']).isRequired,\n  fontSize: PropTypes.number.isRequired,\n  baseColor: PropTypes.string.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  style: Animated.Text.propTypes.style,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nexport { Affix as default };","map":{"version":3,"sources":["/Users/paigeschulz1/Desktop/MUCFinal/MeetUCan/client/node_modules/react-native-material-textfield/src/components/affix/index.js"],"names":["PropTypes","React","PureComponent","styles","Affix","props","active","focused","state","opacity","Animated","Value","animationDuration","timing","toValue","duration","start","style","children","type","fontSize","color","baseColor","containerStyle","height","textStyle","paddingRight","textAlign","paddingLeft","container","defaultProps","numberOfLines","propTypes","number","bool","oneOf","isRequired","string","Text","oneOfType","arrayOf","node"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated } from 'react-native';\n\nimport styles from './styles';\n\nexport default class Affix extends PureComponent {\n  static defaultProps = {\n    numberOfLines: 1,\n\n    active: false,\n    focused: false,\n  };\n\n  static propTypes = {\n    numberOfLines: PropTypes.number,\n\n    active: PropTypes.bool,\n    focused: PropTypes.bool,\n\n    type: PropTypes.oneOf(['prefix', 'suffix']).isRequired,\n\n    fontSize: PropTypes.number.isRequired,\n    baseColor: PropTypes.string.isRequired,\n    animationDuration: PropTypes.number.isRequired,\n\n    style: Animated.Text.propTypes.style,\n\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n    ]),\n  };\n\n  constructor(props) {\n    super(props);\n\n    let { active, focused } = this.props;\n\n    this.state = {\n      opacity: new Animated.Value((active || focused)? 1 : 0),\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    let { opacity } = this.state;\n    let { active, focused, animationDuration } = this.props;\n\n    if ((focused ^ props.focused) || (active ^ props.active)) {\n      Animated\n        .timing(opacity, {\n          toValue: (props.active || props.focused)? 1 : 0,\n          duration: animationDuration,\n        })\n        .start();\n    }\n  }\n\n  render() {\n    let { opacity } = this.state;\n    let { style, children, type, fontSize, baseColor: color } = this.props;\n\n    let containerStyle = {\n      height: fontSize * 1.5,\n      opacity,\n    };\n\n    let textStyle = {\n      color,\n      fontSize,\n    };\n\n    switch (type) {\n      case 'prefix':\n        containerStyle.paddingRight = 8;\n        textStyle.textAlign = 'left';\n        break;\n\n      case 'suffix':\n        containerStyle.paddingLeft = 8;\n        textStyle.textAlign = 'right';\n        break;\n    }\n\n    return (\n      <Animated.View style={[styles.container, containerStyle]}>\n        <Animated.Text style={[style, textStyle]}>{children}</Animated.Text>\n      </Animated.View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}