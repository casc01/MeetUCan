{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/paigeschulz1/Desktop/MUCFinal/MeetUCan/client/node_modules/react-native-material-textfield/src/components/label/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\n\nvar Label = function (_PureComponent) {\n  _inherits(Label, _PureComponent);\n\n  var _super = _createSuper(Label);\n\n  function Label(props) {\n    var _this;\n\n    _classCallCheck(this, Label);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      input: new Animated.Value(_this.inputState()),\n      focus: new Animated.Value(_this.focusState())\n    };\n    return _this;\n  }\n\n  _createClass(Label, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var _this$state = this.state,\n          focus = _this$state.focus,\n          input = _this$state.input;\n      var _this$props = this.props,\n          active = _this$props.active,\n          focused = _this$props.focused,\n          errored = _this$props.errored,\n          duration = _this$props.animationDuration;\n\n      if (focused ^ props.focused || active ^ props.active) {\n        var toValue = this.inputState(props);\n        Animated.timing(input, {\n          toValue: toValue,\n          duration: duration\n        }).start();\n      }\n\n      if (focused ^ props.focused || errored ^ props.errored) {\n        var _toValue = this.focusState(props);\n\n        Animated.timing(focus, {\n          toValue: _toValue,\n          duration: duration\n        }).start();\n      }\n    }\n  }, {\n    key: \"inputState\",\n    value: function inputState() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props,\n          focused = _ref.focused,\n          active = _ref.active;\n\n      return active || focused ? 1 : 0;\n    }\n  }, {\n    key: \"focusState\",\n    value: function focusState() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props,\n          focused = _ref2.focused,\n          errored = _ref2.errored;\n\n      return errored ? -1 : focused ? 1 : 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          focus = _this$state2.focus,\n          input = _this$state2.input;\n\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          restricted = _this$props2.restricted,\n          fontSize = _this$props2.fontSize,\n          activeFontSize = _this$props2.activeFontSize,\n          errorColor = _this$props2.errorColor,\n          baseColor = _this$props2.baseColor,\n          tintColor = _this$props2.tintColor,\n          baseSize = _this$props2.baseSize,\n          basePadding = _this$props2.basePadding,\n          style = _this$props2.style,\n          errored = _this$props2.errored,\n          active = _this$props2.active,\n          focused = _this$props2.focused,\n          animationDuration = _this$props2.animationDuration,\n          props = _objectWithoutProperties(_this$props2, [\"children\", \"restricted\", \"fontSize\", \"activeFontSize\", \"errorColor\", \"baseColor\", \"tintColor\", \"baseSize\", \"basePadding\", \"style\", \"errored\", \"active\", \"focused\", \"animationDuration\"]);\n\n      var color = restricted ? errorColor : focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [errorColor, baseColor, tintColor]\n      });\n      var top = input.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseSize + fontSize * 0.25, baseSize - basePadding - activeFontSize]\n      });\n      var textStyle = {\n        fontSize: input.interpolate({\n          inputRange: [0, 1],\n          outputRange: [fontSize, activeFontSize]\n        }),\n        color: color\n      };\n      var containerStyle = {\n        position: 'absolute',\n        top: top\n      };\n      return React.createElement(Animated.View, {\n        style: containerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.Text, _extends({\n        style: [style, textStyle]\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }), children));\n    }\n  }]);\n\n  return Label;\n}(PureComponent);\n\nLabel.defaultProps = {\n  numberOfLines: 1,\n  active: false,\n  focused: false,\n  errored: false,\n  restricted: false\n};\nLabel.propTypes = {\n  active: PropTypes.bool,\n  focused: PropTypes.bool,\n  errored: PropTypes.bool,\n  restricted: PropTypes.bool,\n  baseSize: PropTypes.number.isRequired,\n  fontSize: PropTypes.number.isRequired,\n  activeFontSize: PropTypes.number.isRequired,\n  basePadding: PropTypes.number.isRequired,\n  tintColor: PropTypes.string.isRequired,\n  baseColor: PropTypes.string.isRequired,\n  errorColor: PropTypes.string.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  style: Animated.Text.propTypes.style,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nexport { Label as default };","map":{"version":3,"sources":["/Users/paigeschulz1/Desktop/MUCFinal/MeetUCan/client/node_modules/react-native-material-textfield/src/components/label/index.js"],"names":["PropTypes","React","PureComponent","Label","props","state","input","Animated","Value","inputState","focus","focusState","active","focused","errored","duration","animationDuration","toValue","timing","start","children","restricted","fontSize","activeFontSize","errorColor","baseColor","tintColor","baseSize","basePadding","style","color","interpolate","inputRange","outputRange","top","textStyle","containerStyle","position","defaultProps","numberOfLines","propTypes","bool","number","isRequired","string","Text","oneOfType","arrayOf","node"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated } from 'react-native';\n\nexport default class Label extends PureComponent {\n  static defaultProps = {\n    numberOfLines: 1,\n\n    active: false,\n    focused: false,\n    errored: false,\n    restricted: false,\n  };\n\n  static propTypes = {\n    active: PropTypes.bool,\n    focused: PropTypes.bool,\n    errored: PropTypes.bool,\n    restricted: PropTypes.bool,\n\n    baseSize: PropTypes.number.isRequired,\n    fontSize: PropTypes.number.isRequired,\n    activeFontSize: PropTypes.number.isRequired,\n    basePadding: PropTypes.number.isRequired,\n\n    tintColor: PropTypes.string.isRequired,\n    baseColor: PropTypes.string.isRequired,\n    errorColor: PropTypes.string.isRequired,\n\n    animationDuration: PropTypes.number.isRequired,\n\n    style: Animated.Text.propTypes.style,\n\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n    ]),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: new Animated.Value(this.inputState()),\n      focus: new Animated.Value(this.focusState()),\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    let { focus, input } = this.state;\n    let { active, focused, errored, animationDuration: duration } = this.props;\n\n    if (focused ^ props.focused || active ^ props.active) {\n      let toValue = this.inputState(props);\n\n      Animated\n        .timing(input, { toValue, duration })\n        .start();\n    }\n\n    if (focused ^ props.focused || errored ^ props.errored) {\n      let toValue = this.focusState(props);\n\n      Animated\n        .timing(focus, { toValue, duration })\n        .start();\n    }\n  }\n\n  inputState({ focused, active } = this.props) {\n    return active || focused? 1 : 0;\n  }\n\n  focusState({ focused, errored } = this.props) {\n    return errored? -1 : (focused? 1 : 0);\n  }\n\n  render() {\n    let { focus, input } = this.state;\n    let {\n      children,\n      restricted,\n      fontSize,\n      activeFontSize,\n      errorColor,\n      baseColor,\n      tintColor,\n      baseSize,\n      basePadding,\n      style,\n      errored,\n      active, \n      focused,\n      animationDuration,\n      ...props\n    } = this.props;\n\n    let color = restricted?\n      errorColor:\n      focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [errorColor, baseColor, tintColor],\n      });\n\n    let top = input.interpolate({\n      inputRange: [0, 1],\n      outputRange: [\n        baseSize + fontSize * 0.25,\n        baseSize - basePadding - activeFontSize,\n      ],\n    });\n\n    let textStyle = {\n      fontSize: input.interpolate({\n        inputRange: [0, 1],\n        outputRange: [fontSize, activeFontSize],\n      }),\n\n      color,\n    };\n\n    let containerStyle = {\n      position: 'absolute',\n      top,\n    };\n\n    return (\n      <Animated.View style={containerStyle}>\n        <Animated.Text style={[style, textStyle]} {...props}>\n          {children}\n        </Animated.Text>\n      </Animated.View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}